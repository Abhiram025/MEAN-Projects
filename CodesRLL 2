userService.js
async resetPassword(userId, email, newPassword, confirmPassword) {
    const user = await UserDAL.findById(userId)|| UserDAL.findByEmail(email);
    if(newPassword!==confirmPassword) throw new Error("Passwords don't match")
    
    if(newPassword<8) throw new Error('Password must be atleast 8 characters')

    user.password=newPassword;
    await user.save();
  }

userController.js
 async resetPassword(req, res) {
    try {
      const {email, newPassword, confirmPassword}=req.body;
      if(!email || !newPassword || !confirmPassword) {
        return res.status(400).json({ message: 'Enter the required fields' });
      }
      await UserService.resetPassword(req.user.id, email, newPassword, confirmPassword);
      res.json({message: 'Password Updated Successfully'})
    } catch(err) {
      console.error("Message: ", err)
    }
  }

userRoute.js
router.put('/reset-password', userController.resetPassword);
